import json
from pyspark.sql import SparkSession
spark = SparkSession.builder.getOrCreate()

try:
    phi_DBFS = DBFSConnector.fetch([], {}, "5e9d5d2393b7b61e07d85fc5", spark,
                                   "{'url': '/FileStore/platform/uploadedSourceFiles/PredictHighestIncomeTrain.csv', 'file_type': 'Delimeted', 'delimiter': ',', 'is_header': 'Use Header Line'}")

    phi_AutoFE = TransformationMain.run(["5e9d5d2393b7b61e07d85fc5"], {"5e9d5d2393b7b61e07d85fc5": phi_DBFS}, "5e9d5d2393b7b61e07d85fc6", spark, json.dumps({"FE": [{"transformationsData": {"feature_label": "Occupation"}, "feature": "Occupation", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "60", "mean": "", "stddev": "", "min": "Accountants and auditors", "max": "Word processors and typists", "missing": "0"}, "transformation": "String Indexer"}, {"transformationsData": {}, "feature": "M_workers", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "60", "mean": "139.78", "stddev": "211.8", "min": "1", "max": "1111", "missing": "0"}}, {"transformationsData": {"feature_label": "M_weekly"}, "feature": "M_weekly", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "60", "mean": "995.36", "stddev": "348.44", "min": "1009", "max": "Na", "missing": "0"}, "transformation": "String Indexer"}, {"transformationsData": {}, "feature": "F_workers", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "60", "mean": "101.68", "stddev": "179.38", "min": "0", "max": "846", "missing": "0"}}, {"transformationsData": {"feature_label": "F_weekly"}, "feature": "F_weekly", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "60", "mean": "813.16", "stddev": "295.89", "min": "1031", "max": "Na", "missing": "0"}, "transformation": "String Indexer"}, {
                                        "transformationsData": {}, "feature": "All_workers", "transformation": "", "type": "numeric", "replaceby": "mean", "selected": "True", "stats": {"count": "60", "mean": "241.52", "stddev": "350.6", "min": "3", "max": "1536", "missing": "0"}}, {"transformationsData": {"feature_label": "All_weekly"}, "feature": "All_weekly", "type": "string", "selected": "True", "replaceby": "max", "stats": {"count": "60", "mean": "913.68", "stddev": "296.12", "min": "1001", "max": "Na", "missing": "0"}, "transformation": "String Indexer"}, {"feature": "Occupation_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "60", "mean": "29.5", "stddev": "17.46", "min": "0.0", "max": "59.0", "missing": "0"}}, {"feature": "M_weekly_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "60", "mean": "9.35", "stddev": "11.11", "min": "0.0", "max": "33.0", "missing": "0"}}, {"feature": "F_weekly_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "60", "mean": "5.42", "stddev": "7.99", "min": "0.0", "max": "25.0", "missing": "0"}}, {"feature": "All_weekly_transform", "transformation": "", "transformationsData": {}, "type": "real", "selected": "True", "stats": {"count": "60", "mean": "14.35", "stddev": "13.94", "min": "0.0", "max": "41.0", "missing": "0"}}]}))

    functionRegression(phi_AutoFE, ["Occupation", "M_workers", "M_weekly",
                                    "F_workers", "F_weekly", "All_workers"], "All_weekly")

except Exception as ex:
    print(ex)
